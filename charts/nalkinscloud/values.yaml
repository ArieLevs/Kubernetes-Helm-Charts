# Default values for airflow.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

deployment:
  replicaCount: 2
  image:
    privateRepo: true
    repository: docker.nalkins.cloud/nalkinscloud/nalkinscloud-django-backend
    tag: latest
    imagePullPolicy: IfNotPresent
  env:
    environment: alpha
    version: null
    backend_domain: https://api-alpha.nalkins.cloud
    frontend_domain: https://alpha.nalkins.cloud
    graylog_host:
    graylog_port:
    email_host:
    email_port:

nginx:
  replicaCount: 2
  image:
    privateRepo: false
    repository: nginx
    tag: alpine
    imagePullPolicy: IfNotPresent
  configs:
    staticRoot: /static/
    serverName: api-alpha.nalkins.cloud

secrets:
  # If blank, random 50 char secret created
  django_secret_key:

  docker:
    dockerSecretName: nalkinscloud-nexus-docker
    registry:
    username:
    password:
  database:
    username:
    password:
  email:
    username:
    password:

configmap:
  databaseVars:
    # Key also used as env name inside project
    db_name: django
    db_user: django
    db_host: centraldb.nalkins.cloud

service:
  type: ClusterIP
  port: 443

ingress:
  enabled: true
  ingressServiceName: nalkinscloud-nginx
  annotations:
    kubernetes.io/ingress.allow-http: "false"
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.class: "nginx"
  path: /
  hosts:
    - api-alpha.nalkins.cloud
  tls:
    - secretName: nalkins-cloud-tls
      hosts:
        - api-alpha.nalkins.cloud

persistent:
  enabled: true

  capacity:
    storage: 50Gi
  nfs:
    enabled: true
    server:
    path:
  local:
    enabled: false
    path: /tmp/staticfiles

resources: {}
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
