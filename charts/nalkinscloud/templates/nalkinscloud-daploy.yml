{{- $fullName := include "nalkinscloud.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
{{ include "nalkinscloud.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "nalkinscloud.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "nalkinscloud.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{ if .Values.deployment.image.privateRepo }}
      imagePullSecrets:
        - name: {{ .Values.secrets.docker.dockerSecretName }}
    {{ end }}

    {{- with .Values.dependantServices }}
      initContainers:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ $fullName }}
          image: "{{ .Values.deployment.image.repository}}:{{ .Values.deployment.image.tag}}"
          imagePullPolicy: {{ .Values.deployment.image.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          env:
            - name: db_pass
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: db_pass
            - name: db_user
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: db_user
            - name: django_secret_key
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: django_secret_key
            - name: email_username
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: email_username
            - name: email_password
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: email_password

            - name: google_oauth_client_id
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: google_oauth_client_id
            - name: google_oauth_client_secret
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: google_oauth_client_secret
            - name: github_oauth_client_id
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: github_oauth_client_id
            - name: github_oauth_client_secret
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: github_oauth_client_secret

            {{- range $key, $value := .Values.deployment.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}

            {{- range $key, $value := .Values.configmap.databaseVars }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}-config-map
                  key: {{ $key }}
            {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}