{{- $fullName := include "nalkinscloud.fullname" . -}}
#apiVersion: argoproj.io/v1alpha1
#kind: Rollout
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
{{ include "nalkinscloud.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "nalkinscloud.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
#    canary:
#      steps:
#      - setWeight: 40
#      - pause: {}
  template:
    metadata:
    {{- with .Values.deployment.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "nalkinscloud.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ $fullName }}
#      serviceAccountName: vault-auth
#      shareProcessNamespace: true
#
#      volumes:
#        - name: shared-data
#          emptyDir: {}
#
#        - name: vault-token
#          emptyDir:
#            medium: Memory
#
#        - name: config
#          configMap:
#            name: vault-agent-config-map
#            items:
#              - key: vault-agent-config.hcl
#                path: vault-agent-config.hcl
#              - key: consul-template-config.hcl
#                path: consul-template-config.hcl

    {{ if .Values.secrets.docker.password }}
      imagePullSecrets:
        - name: {{ .Values.secrets.docker.dockerSecretName }}
    {{ end }}

      initContainers:
        - name: init-database
          image: busybox
          command: ['sh', '-c', 'env; until nc -z ${db_host} ${db_port} ; do echo waiting for database; sleep 2; done;']
          env:
            - name: db_host
              value: {{ .Values.configmap.databaseVars.db_host }}
#            - name: db_host
#              valueFrom:
#                configMapKeyRef:
#                  name: {{ $fullName }}-config-map
#                  key: db_host
            - name: db_port
              value: "3306"
#        - name: vault-agent-auth
#          image: vault
#
#          volumeMounts:
#            - name: config
#              mountPath: /etc/vault
#            - name: vault-token
#              mountPath: /home/vault
#
#          # This assumes Vault running on local host and K8s running in Minikube using VirtualBox
#          env:
#            - name: VAULT_ADDR
#              value: https://vault.nalkins.cloud
#
#          # Run the Vault agent
#          args:
#            [
#              "agent",
#              "-config=/etc/vault/vault-agent-config.hcl",
#              #"-log-level=debug",
#            ]
    {{- with .Values.additionalInitContainers }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
#        # Consul Template container
#        - name: consul-template
#          image: hashicorp/consul-template:alpine
#          imagePullPolicy: IfNotPresent
#          securityContext:
#            capabilities:
#              add: ['SYS_PTRACE']
#          volumeMounts:
#            - name: vault-token
#              mountPath: /home/vault
#
#            - name: config
#              mountPath: /etc/consul-template
#
#            - name: shared-data
#              mountPath: /etc/secrets
#
#          env:
#            - name: HOME
#              value: /home/vault
#
#            - name: VAULT_ADDR
#              value: https://vault.nalkins.cloud
#
#          # Consul-Template looks in $HOME/.vault-token, $VAULT_TOKEN, or -vault-token (via CLI)
#          args:
#            [
#              "-config=/etc/consul-template/consul-template-config.hcl",
#              #"-log-level=debug",
#            ]

        - name: {{ $fullName }}
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.image.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          # Any code greater than or equal to 200 and less than 400 indicates success. Any other code indicates failure.
          livenessProbe:
            httpGet:
              httpHeaders:
              - name: Host
                value: 127.0.0.1
              path: /liveness/
              port: http
            initialDelaySeconds: 45
            periodSeconds: 10
          readinessProbe:
            httpGet:
              httpHeaders:
              - name: Host
                value: 127.0.0.1
              path: /readiness/
              port: http
            initialDelaySeconds: 45
            periodSeconds: 30
          env:
            - name: version
              value: {{ .Values.deployment.image.tag | quote }}

            - name: db_pass
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: db_pass
            - name: db_user
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: db_user
            - name: django_secret_key
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: django_secret_key
            - name: email_username
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: email_username
            - name: email_password
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: email_password

{{/*            - name: google_oauth_client_id*/}}
{{/*              valueFrom:*/}}
{{/*                secretKeyRef:*/}}
{{/*                  name: {{ $fullName }}*/}}
{{/*                  key: google_oauth_client_id*/}}
{{/*            - name: google_oauth_client_secret*/}}
{{/*              valueFrom:*/}}
{{/*                secretKeyRef:*/}}
{{/*                  name: {{ $fullName }}*/}}
{{/*                  key: google_oauth_client_secret*/}}
{{/*            - name: github_oauth_client_id*/}}
{{/*              valueFrom:*/}}
{{/*                secretKeyRef:*/}}
{{/*                  name: {{ $fullName }}*/}}
{{/*                  key: github_oauth_client_id*/}}
{{/*            - name: github_oauth_client_secret*/}}
{{/*              valueFrom:*/}}
{{/*                secretKeyRef:*/}}
{{/*                  name: {{ $fullName }}*/}}
{{/*                  key: github_oauth_client_secret*/}}

            {{- range $key, $value := .Values.deployment.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}

            {{- range $key, $value := .Values.configmap.databaseVars }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}-config-map
                  key: {{ $key }}
            {{- end }}

#          volumeMounts:
#            - name: shared-data
#              mountPath: /tmp

    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}