apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sms-verifier-backend.fullname" . }}
  labels:
    {{- include "sms-verifier-backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "sms-verifier-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sms-verifier-backend.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "sms-verifier-backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          # Any code greater than or equal to 200 and less than 400 indicates success. Any other code indicates failure.
          livenessProbe:
            httpGet:
              httpHeaders:
              - name: Host
                value: 127.0.0.1
              path: /liveness/
              port: http
            initialDelaySeconds: 5
            periodSeconds: 3
          readinessProbe:
            httpGet:
              httpHeaders:
              - name: Host
                value: 127.0.0.1
              path: /readiness/
              port: http
          env:
            - name: version
              value: {{ .Values.deployment.image.tag | quote }}

            - name: db_pass
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: db_pass
            - name: db_user
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: db_user
            - name: django_secret_key
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: django_secret_key

            - name: google_oauth_client_id
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: google_oauth_client_id
            - name: google_oauth_client_secret
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: google_oauth_client_secret
            - name: github_oauth_client_id
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: github_oauth_client_id
            - name: github_oauth_client_secret
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}
                  key: github_oauth_client_secret

            {{- range $key, $value := .Values.deployment.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}

            {{- range $key, $value := .Values.configmap.databaseVars }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}-config-map
                  key: {{ $key }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
